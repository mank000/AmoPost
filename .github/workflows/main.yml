name: Backend Workflow

on:
  workflow_dispatch:

jobs:
  build_backend_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./amopost/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/amopost_backend:latest

  build_nginx_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/amopost_nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_backend_and_push_to_docker_hub
      - build_nginx_and_push_to_docker_hub
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            sudo docker compose -f docker-compose.yml stop
            sudo docker compose -f docker-compose.yml pull
            sudo docker compose -f docker-compose.yml up -d
            sleep 4
            sudo docker compose -f docker-compose.yml exec -T backend python manage.py migrate
            sudo docker compose -f docker-compose.yml exec -T backend python manage.py collectstatic --noinput --clear
            sudo docker image prune -f